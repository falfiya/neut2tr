// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package racket

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ttString-0]
	_ = x[ttPound-1]
	_ = x[ttPipe-2]
	_ = x[ttQuote-3]
	_ = x[ttSemi-4]
	_ = x[ttEscape-5]
	_ = x[ttParenL-6]
	_ = x[ttParenR-7]
	_ = x[ttBracketL-8]
	_ = x[ttBracketR-9]
	_ = x[ttBraceL-10]
	_ = x[ttBraceR-11]
	_ = x[ttLf-12]
	_ = x[ttWhiteSpace-13]
	_ = x[ttOther-14]
}

const _TokenType_name = "ttStringttPoundttPipettQuotettSemittEscapettParenLttParenRttBracketLttBracketRttBraceLttBraceRttLfttWhiteSpacettOther"

var _TokenType_index = [...]uint8{0, 8, 15, 21, 28, 34, 42, 50, 58, 68, 78, 86, 94, 98, 110, 117}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
